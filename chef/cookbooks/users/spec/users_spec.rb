require 'bundler/setup'
require 'chefspec'

describe 'file tests' do
  # chef_run = ChefSpec::ChefRunner.new() do |node|
  #   node.set['default']['attr1'] = "bar"
  # end

  let (:chef_run) { ChefSpec::ChefRunner.new.converge 'users::admins' }
  it 'file copied with correct content' do
    Chef::Recipe.any_instance.stub(:data_bag).and_return(["id"])
    Chef::Recipe.any_instance.stub(:data_bag_item).and_return({ "id" => "uwithout", "key" => "123" })
    # Chef::Recipe.any_instance.stub(:data_bag_item).and_return(Hash.new)
    # Chef::Recipe.any_instance.stub(:data_bag_item).with("admins", "my_item").and_return({"id" => "my_item", "fun data" => "whatever"})

    expect(chef_run).to create_file '/root/.ssh/authorized_keys'
    # file = chef_run.template('/root/.ssh/authorized_keys')
    expect(chef_run).to create_file_with_content '/root/.ssh/authorized_keys', '123'
  end
end


describe 'ldap access' do

  let (:chef_run) { ChefSpec::ChefRunner.new.converge 'users::ldap_access' }

  it 'should create users with ldap username' do
    
    Chef::Recipe.any_instance.stub(:data_bag).and_return(["id"])
    Chef::Recipe.any_instance.stub(:data_bag_item).and_return({ "id" => "uwithout" })

    expect(chef_run).to create_file_with_content '/etc/security/access.conf', <<-EOF
# DO NOT TOUCH - AUTO-GENERATED BY CHEF!

  +:ALL:LOCAL
  +:@uucp:ALL
  -:ALL:ALL
EOF
  end

  it 'should not create users without ldap username' do
    Chef::Recipe.any_instance.stub(:data_bag).and_return(["id"])
    Chef::Recipe.any_instance.stub(:data_bag_item).and_return(Hash.new)
    Chef::Recipe.any_instance.stub(:data_bag_item).and_return({ "id" => "uwith", "ldap-login" => "ldaplogin" })

    expect(chef_run).to create_file_with_content '/etc/security/access.conf', '+:ldaplogin:ALL'
  end  
end
